<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>EiloのBlog</title>
  <icon>http://example.com/icon.png</icon>
  <subtitle>记录着日常生活的博客</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2025-06-15T05:46:57.468Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Eilo</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>基于 Cloudflare 自建多合一文件分享系统｜Markdown渲染/S3聚合存储/阅后即焚/密码保护/WebDAV挂载</title>
    <link href="http://example.com/posts/b69e026c.html"/>
    <id>http://example.com/posts/b69e026c.html</id>
    <published>2025-06-14T13:28:14.000Z</published>
    <updated>2025-06-15T05:46:57.468Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><strong>GitHub</strong>: <a href="https://github.com/ling-drag0n/CloudPaste" target="_blank" rel="noopener">CloudPaste-基于Cloudflare的在线文本&#x2F;大文件分享平台</a></p><p><strong>首先感谢<a href="https://github.com/2512132839">ling-drag0n</a>大佬的开源!!!</strong></p><h2 id="项目介绍"><a href="#项目介绍" class="headerlink" title="项目介绍"></a>项目介绍</h2><p>CloudPaste 是一个功能全面且用户友好的内容中转平台，其核心功能与细节设计都颇具亮点：</p><p>核心功能方面：</p><ol><li>支持内容分享、文件管理和WebDAV挂载</li><li>内置基于Vditor的Markdown编辑器，支持公式、流程图、思维导图等技术文档编辑</li><li>提供完善的文件上传功能，兼容多种S3服务（Cloudflare R2&#x2F;Backblaze B2&#x2F;AWS S3）</li></ol><p>特色功能：</p><ul><li>分享设置：可配置访问密码、有效期、查看次数限制</li><li>多种输出格式：支持导出为PDF&#x2F;图片&#x2F;Word&#x2F;HTML等格式</li><li>直链生成：可创建Raw直链用于代码或配置文件引用</li><li>便捷分享：支持生成自定义链接和二维码</li></ul><p>文件管理优势：</p><ol><li>采用预签名直传技术，上传进度实时显示</li><li>支持文件备注、密码保护、过期时间设置</li><li>提供访问统计功能</li><li>完善的WebDAV支持，可挂载为网络驱动器</li><li>适配主流笔记工具（Obsidian&#x2F;Joplin等）</li></ol><p>该项目集编辑、管理、分享功能于一体，特别适合需要处理文本和技术文档的用户，在文件同步备份和远程管理方面也表现出色。</p><p>本文在CloudPaste上也有存档，大家感兴趣的话可以查看: <a href="https://copy.284628.xyz/paste/0l0kqa">基于 Cloudflare 自建多合一文件分享系统｜Markdown渲染&#x2F;S3聚合存储&#x2F;阅后即焚&#x2F;密码保护&#x2F;WebDAV挂载</a></p><h2 id="项目部署"><a href="#项目部署" class="headerlink" title="项目部署"></a>项目部署</h2><p>请看官方部署文档：</p><p><a href="https://github.com/ling-drag0n/CloudPaste/blob/main/README_CN.md" target="_blank" rel="noopener">CloudPaste-部署文档</a></p><h2 id="部署问题答疑"><a href="#部署问题答疑" class="headerlink" title="部署问题答疑"></a>部署问题答疑</h2><p><strong>Q：</strong> 如何 Fork 仓库？</p><p><strong>A：</strong> 可以看下图哦。</p><p><img src="https://pic1.imgdb.cn/item/684d79bc58cb8da5c84c569e.png"></p><p><img src="https://pic1.imgdb.cn/item/684d7a0358cb8da5c84c56ac.png"></p><p><strong>Q：</strong> 如何添加 Secrets？</p><p><strong>A：</strong> 可以看下图哦。</p><p><img src="https://pic1.imgdb.cn/item/684d7a8a58cb8da5c84c56ce.png"></p><p><strong>Q：</strong> 创建新的 API 令牌中的模板是什么？</p><p><strong>A：</strong> 可以看下图哦，就是添加 <code>D1</code> 数据库编辑权限。后面的全部选择包括，资源就是你的账户名称了。</p><p><img src="https://pic1.imgdb.cn/item/684d7b7a58cb8da5c84c573b.png"></p><p><strong>Q：</strong> 为什么按照官方文档中这步骤<strong>重要步骤： 随后要再次运行一遍前端的工作流，以便完成后端域名加载！！！</strong>配置完后无法登录？</p><p><strong>A：</strong> 你在添加完环境变量后要再运行一次后端的工作流，再按官方的步骤运行一次前端的工作流，也就是你提到的这个步骤。</p><p><strong>Q：</strong> 后台管理员的登录密码是什么?</p><p><strong>A：</strong> 官方文档里面有说明呀，用户名: admin, 密码: admin123</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;GitHub&lt;/strong&gt;: &lt;a</summary>
        
      
    
    
    
    <category term="开发笔记" scheme="http://example.com/categories/%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Cloudflare" scheme="http://example.com/tags/Cloudflare/"/>
    
    <category term="开源项目" scheme="http://example.com/tags/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/"/>
    
    <category term="内容中转" scheme="http://example.com/tags/%E5%86%85%E5%AE%B9%E4%B8%AD%E8%BD%AC/"/>
    
    <category term="Pages" scheme="http://example.com/tags/Pages/"/>
    
  </entry>
  
  <entry>
    <title>用 Claw 容器免费部署哪吒面板｜超详细Docker搭建教程，轻松实现多服务器可视化监控</title>
    <link href="http://example.com/posts/6abf4a82.html"/>
    <id>http://example.com/posts/6abf4a82.html</id>
    <published>2025-05-18T00:58:49.000Z</published>
    <updated>2025-06-18T03:22:14.613Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前提准备"><a href="#前提准备" class="headerlink" title="前提准备"></a>前提准备</h2><ul><li>一个可用的 <a href="https://console.run.claw.cloud/signin?link=Y4ABXCZ59E09"><strong>Claw 账号</strong></a><ul><li>必须使用 <strong>GitHub 注册</strong>。  </li><li>如果 GitHub 账号 <strong>未满 180 天</strong>，也可以用 Google 注册，但奖励相同（仅 $5）。  </li><li><strong>新用户</strong>：注册即送 <strong>$5</strong>（无 GitHub 天数限制）。  </li><li><strong>老用户（GitHub ≥180 天）</strong>：注册送 $5，<strong>之后每月再送 $5</strong>。  </li><li><strong>无论哪种注册方式，新用户都得 $5。</strong>  </li><li><strong>只有 GitHub 满 180 天的用户，才能每月额外领 $5。</strong></li></ul></li><li>一个自定义域名（推荐接入 Cloudflare）</li><li>用于添加监控的 <strong>Linux 服务器</strong>（可多台）</li></ul><hr><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><h3 id="第一步：注册并登录-Claw-平台"><a href="#第一步：注册并登录-Claw-平台" class="headerlink" title="第一步：注册并登录 Claw 平台"></a>第一步：注册并登录 Claw 平台</h3><ol><li>访问 Claw 容器服务平台</li><li>登录后点击左侧菜单中的「<strong>App Launchpad &#x2F; 应用程序</strong>」。</li><li>点击「<strong>Create App &#x2F; 创建应用</strong>」。</li></ol><p><img src="https://img20.360buyimg.com/openfeedback/jfs/t1/286548/18/14946/131408/6852146fF5ab6432f/2f6d63d01d32ca2a.png"></p><p><img src="https://img20.360buyimg.com/openfeedback/jfs/t1/308588/35/10403/108270/685214ebF198e7ead/b8f759ac4f1e529e.png"></p><hr><h3 id="第二步：部署哪吒面板容器"><a href="#第二步：部署哪吒面板容器" class="headerlink" title="第二步：部署哪吒面板容器"></a>第二步：部署哪吒面板容器</h3><ol><li><p><strong>设置名称</strong>：随便填写，比如 <code>nezha</code>。</p></li><li><p><strong>镜像设置</strong>：</p><ul><li>类型选择 <code>Public</code></li><li>填入哪吒面板镜像名称</li></ul></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ghcr.io/nezhahq/nezha:v1.12.0</span><br></pre></td></tr></table></figure><ol start="3"><li><p><strong>资源分配</strong>：</p><ul><li>CPU：建议设置为 <code>0.2</code></li><li>内存：<code>256MB</code></li></ul></li></ol><p><img src="https://img20.360buyimg.com/openfeedback/jfs/t1/309333/3/10450/113021/685215e9Fdfbf5864/fc88802327c3dd22.png"></p><ol start="4"><li><p><strong>开放端口</strong>：</p><ul><li>设置监听端口为 <code>8008</code></li></ul></li><li><p><strong>开启 HTTPS</strong> 并填写 <strong>自定义域名</strong>：</p><ul><li>例：<code>nezha.yourdomain.com</code></li></ul></li></ol><p><img src="https://img20.360buyimg.com/openfeedback/jfs/t1/316700/1/9952/105441/68521693F24774348/63e95a103b60f5f9.png"></p><p><img src="https://img20.360buyimg.com/openfeedback/jfs/t1/312435/40/10646/114139/68521755F834c094f/940289932bfac042.png"></p><ul><li>完成下方的解析后再点击<code>Confirm</code></li></ul><hr><h3 id="第三步：配置-Cloudflare-DNS-解析（针对上面使用的自定义域名）"><a href="#第三步：配置-Cloudflare-DNS-解析（针对上面使用的自定义域名）" class="headerlink" title="第三步：配置 Cloudflare DNS 解析（针对上面使用的自定义域名）"></a>第三步：配置 Cloudflare DNS 解析（针对上面使用的自定义域名）</h3><ol><li><p>登录 Cloudflare，选择你的域名。</p></li><li><p>添加一条 <strong>CNAME 记录</strong>：</p><ul><li>名称：你自定义域名的前缀（如 <code>nezha</code>）</li><li>目标：Claw 提供的服务子域（部署面板后显示）</li><li>代理状态：<strong>关闭</strong>（灰色云朵）</li></ul></li><li><p>保存。</p></li></ol><hr><h3 id="第四步：添加持久化存储"><a href="#第四步：添加持久化存储" class="headerlink" title="第四步：添加持久化存储"></a>第四步：添加持久化存储</h3><ol><li>回到 Claw，找到存储配置，点击「添加」。</li></ol><p><img src="https://img20.360buyimg.com/openfeedback/jfs/t1/310540/34/10396/118241/6852193cFf6e5572d/aaca4f8c4284c21b.png"></p><ol start="2"><li>设置容量为 <code>2G</code>，路径填写为面板所需的数据挂载路径。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/dashboard/data</span><br></pre></td></tr></table></figure><ol start="3"><li>点击确定。</li></ol><p><img src="https://img20.360buyimg.com/openfeedback/jfs/t1/294930/40/10076/107843/685219e4Fdb4be253/bbb67b04332a68db.png"></p><hr><h3 id="第五步：部署应用"><a href="#第五步：部署应用" class="headerlink" title="第五步：部署应用"></a>第五步：部署应用</h3><ol><li>回到应用设置顶部，点击「部署」。</li></ol><p><img src="https://img20.360buyimg.com/openfeedback/jfs/t1/302025/11/13347/126607/68521a4eF543d082f/40fb9933f6b03947.png"></p><ol start="2"><li>系统开始部署哪吒面板容器。</li></ol><hr><h3 id="第六步：部署-GRPC-反向代理容器（用于-Agent-对接）"><a href="#第六步：部署-GRPC-反向代理容器（用于-Agent-对接）" class="headerlink" title="第六步：部署 GRPC 反向代理容器（用于 Agent 对接）"></a>第六步：部署 GRPC 反向代理容器（用于 Agent 对接）</h3><ol><li>同样创建一个新的 App，命名如 <code>nezha-grpc</code>。</li><li>镜像选择：<code>nginx</code></li><li>资源分配：CPU 和内存都调到最低。</li><li>设置网络端口：<code>80</code></li><li>打开「GRPC」选项，并配置另一个自定义域名（如 <code>grpc.yourdomain.com</code>）</li></ol><h4 id="设置对应的-DNS-记录："><a href="#设置对应的-DNS-记录：" class="headerlink" title="设置对应的 DNS 记录："></a>设置对应的 DNS 记录：</h4><ul><li><p>同样在 Cloudflare 中添加一条 CNAME：</p><ul><li>名称：grpc 前缀</li><li>目标：Claw 分配的地址</li><li>状态：灰色（关闭代理）</li></ul></li></ul><hr><h3 id="第七步：配置-GRPC-容器中的反代文件"><a href="#第七步：配置-GRPC-容器中的反代文件" class="headerlink" title="第七步：配置 GRPC 容器中的反代文件"></a>第七步：配置 GRPC 容器中的反代文件</h3><ol><li>在 Claw 中的 GRPC 容器内，找到「添加配置文件」。</li><li>填写配置文件名</li></ol><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/nginx/conf.d/default.conf</span><br></pre></td></tr></table></figure><ol start="3"><li><p>粘贴反代的 Nginx 配置模板，并：</p><ul><li>替换其中的内网 IP 为哪吒容器实际分配的 IP 地址（可在 Claw 容器详情中查看）</li></ul></li></ol><p><img src="https://img20.360buyimg.com/openfeedback/jfs/t1/302819/21/15321/106714/68522c2fF37b07398/c483cfb5ddd11214.png"></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">upstream</span> dashboard &#123;</span><br><span class="line">    <span class="attribute">server</span> nezha.ns-8eup6mu6.svc.cluster.local:<span class="number">8008</span>;</span><br><span class="line">    <span class="attribute">keepalive</span> <span class="number">512</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span> http2;</span><br><span class="line">    <span class="attribute">server_name</span> nezha.ns-8eup6mu6.svc.cluster.local;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">underscores_in_headers</span> <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line">    <span class="section">location</span><span class="regexp"> ^~</span> /proto.NezhaService/ &#123;</span><br><span class="line">        <span class="attribute">grpc_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">        <span class="attribute">grpc_set_header</span> nz-realip <span class="variable">$remote_addr</span>;</span><br><span class="line">        <span class="attribute">grpc_read_timeout</span> <span class="number">600s</span>;</span><br><span class="line">        <span class="attribute">grpc_send_timeout</span> <span class="number">600s</span>;</span><br><span class="line">        <span class="attribute">grpc_socket_keepalive</span> <span class="literal">on</span>;</span><br><span class="line">        <span class="attribute">client_max_body_size</span> <span class="number">10m</span>;</span><br><span class="line">        <span class="attribute">grpc_buffer_size</span> <span class="number">4m</span>;</span><br><span class="line">        <span class="attribute">grpc_pass</span> grpc://dashboard;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">server</span> nezha.ns-8eup6mu6.svc.cluster.local:<span class="number">8008</span>;</span><br></pre></td></tr></table></figure><p>将<code>nezha.ns-8eup6mu6.svc.cluster.local:8008</code>替换为你的内网 IP ，去掉 <code>https://</code> 协议头。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">server_name</span> nezha.ns-8eup6mu6.svc.cluster.local;</span><br></pre></td></tr></table></figure><p>将<code>nezha.ns-8eup6mu6.svc.cluster.local</code>替换为你的内网 IP ，去掉 <code>https://</code> 协议头，去除端口号，仅留 IP。</p><p><img src="https://img20.360buyimg.com/openfeedback/jfs/t1/307116/25/10260/110004/68521cf8F4b03f1a7/8a655743194c63cb.png"></p><ol start="4"><li>保存并部署。</li></ol><hr><h3 id="第八步：首次访问面板并初始化设置"><a href="#第八步：首次访问面板并初始化设置" class="headerlink" title="第八步：首次访问面板并初始化设置"></a>第八步：首次访问面板并初始化设置</h3><ol><li>打开你的面板地址（如 <code>https://nezha.yourdomain.com</code>）</li></ol><p><img src="https://img20.360buyimg.com/openfeedback/jfs/t1/320020/35/9861/72354/68521e29F56a4f375/81c86d64a5198e05.png"></p><ol start="2"><li><p>登录：</p><ul><li>用户名：<code>admin</code></li><li>密码：<code>admin</code></li></ul></li><li><p>进入「系统设置」：</p><ul><li>修改站点名称</li><li>语言设置为「简体中文」</li></ul></li></ol><p><img src="https://img20.360buyimg.com/openfeedback/jfs/t1/304770/11/11654/65097/68521eaaF12098738/33797429cfa762b2.png"></p><ul><li>对接地址填写为：<code>grpc.yourdomain.com:80</code></li><li>TLS 选项可以暂不勾选</li></ul><ol start="4"><li>保存设置。</li></ol><p><img src="https://img20.360buyimg.com/openfeedback/jfs/t1/294775/38/15135/67757/68521f97Fb36a0905/1720a569992534a5.png"></p><hr><h3 id="第九步：添加服务器进行监控"><a href="#第九步：添加服务器进行监控" class="headerlink" title="第九步：添加服务器进行监控"></a>第九步：添加服务器进行监控</h3><ol><li>在面板「监控」页面点击「安装命令」。</li><li>选择操作系统（如 Linux）。</li><li>SSH 登录到你的服务器。</li><li>粘贴并执行安装命令。</li><li>安装完成后，面板中应自动显示该服务器。</li></ol><hr><h3 id="第十步：启用-HTTPS"><a href="#第十步：启用-HTTPS" class="headerlink" title="第十步：启用 HTTPS"></a>第十步：启用 HTTPS</h3><p>若 Claw 未自动生成 HTTPS 链接，请按以下步骤手动设置。</p><ol><li><p>回到 Cloudflare 控制台：</p><ul><li>打开域名的代理状态（点击小灰云变为橙色云）</li></ul></li></ol><p><img src="https://img20.360buyimg.com/openfeedback/jfs/t1/317117/20/9681/184418/68521842F5b8c1ba9/7dcfbf69148b09bf.png"></p><ul><li>进入「SSL &#x2F; TLS」设置，开启「始终使用 HTTPS」功能</li></ul><ol start="2"><li>等待一段时间刷新浏览器，即可看到面板变为 HTTPS 加密连接。</li></ol><hr><h2 id="成功！你已经部署完成"><a href="#成功！你已经部署完成" class="headerlink" title="成功！你已经部署完成"></a>成功！你已经部署完成</h2><p>至此，一个完整的哪吒监控面板就部署完成了。</p><p><strong><a href="https://nezha.284628.xyz/">Eiloの鸡窝</a></strong></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;前提准备&quot;&gt;&lt;a href=&quot;#前提准备&quot; class=&quot;headerlink&quot; title=&quot;前提准备&quot;&gt;&lt;/a&gt;前提准备&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;一个可用的 &lt;a</summary>
        
      
    
    
    
    <category term="开发笔记" scheme="http://example.com/categories/%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="哪吒监控" scheme="http://example.com/tags/%E5%93%AA%E5%90%92%E7%9B%91%E6%8E%A7/"/>
    
    <category term="容器" scheme="http://example.com/tags/%E5%AE%B9%E5%99%A8/"/>
    
    <category term="Docker" scheme="http://example.com/tags/Docker/"/>
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
    <category term="Claw" scheme="http://example.com/tags/Claw/"/>
    
  </entry>
  
  <entry>
    <title>国内走国内 CDN，国外走 Cloudflare｜网站智能分流加速</title>
    <link href="http://example.com/posts/7e671a83.html"/>
    <id>http://example.com/posts/7e671a83.html</id>
    <published>2025-04-14T02:25:41.000Z</published>
    <updated>2025-06-15T06:23:01.364Z</updated>
    
    
    
    
    <category term="开发笔记" scheme="http://example.com/categories/%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="网站加速" scheme="http://example.com/tags/%E7%BD%91%E7%AB%99%E5%8A%A0%E9%80%9F/"/>
    
    <category term="CDN" scheme="http://example.com/tags/CDN/"/>
    
    <category term="智能分流" scheme="http://example.com/tags/%E6%99%BA%E8%83%BD%E5%88%86%E6%B5%81/"/>
    
    <category term="Cloudflare" scheme="http://example.com/tags/Cloudflare/"/>
    
  </entry>
  
  <entry>
    <title>JSDelivr 国内加速技巧｜通过括彩云公益镜像实现高速访问体验</title>
    <link href="http://example.com/posts/b3a5fb17.html"/>
    <id>http://example.com/posts/b3a5fb17.html</id>
    <published>2025-03-12T09:23:40.000Z</published>
    <updated>2025-06-15T04:06:42.887Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是-jsDelivr？"><a href="#什么是-jsDelivr？" class="headerlink" title="什么是 jsDelivr？"></a>什么是 jsDelivr？</h2><p>jsDelivr 是一个非常受欢迎的<strong>国外免费 CDN 服务平台</strong>，用于加载 JavaScript、CSS、图片等静态资源，能显著减轻服务器压力并加快网站访问速度。</p><p>但近年来，由于<strong>国内滥用</strong>及相关政策原因，jsDelivr 在中国大陆的备案被撤销，导致国内节点被关闭，访问速度变慢，对国内用户体验较差。</p><hr><h2 id="jsDelivr-的基本使用方式"><a href="#jsDelivr-的基本使用方式" class="headerlink" title="jsDelivr 的基本使用方式"></a>jsDelivr 的基本使用方式</h2><p>jsDelivr 的使用方式非常灵活，主要包括以下几种：</p><h3 id="加载-JavaScript-库"><a href="#加载-JavaScript-库" class="headerlink" title="加载 JavaScript 库"></a>加载 JavaScript 库</h3><p>例如加载 jQuery：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>npm/</code>：使用 NPM 源</li><li><code>jquery@3.6.0</code>：指定库名称和版本</li><li><code>dist/jquery.min.js</code>：实际资源路径</li></ul><p>可以不写版本号加载最新版本，但<strong>强烈建议写死版本</strong>避免意外更新导致项目出错。</p><h3 id="加载-CSS-文件"><a href="#加载-CSS-文件" class="headerlink" title="加载 CSS 文件"></a>加载 CSS 文件</h3><p>例如加载 Bootstrap：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="加载图片等静态资源（GitHub-仓库）"><a href="#加载图片等静态资源（GitHub-仓库）" class="headerlink" title="加载图片等静态资源（GitHub 仓库）"></a>加载图片等静态资源（GitHub 仓库）</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/user/repo@version/path/to/image.png&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>使用 GitHub 仓库资源（<code>gh</code> 源）</li><li><code>user/repo</code>：用户名+仓库名</li><li><code>@version</code>：可选版本</li><li><code>/path/to/image.png</code>：文件路径</li></ul><hr><h2 id="jsDelivr-支持的资源源（加速类型）"><a href="#jsDelivr-支持的资源源（加速类型）" class="headerlink" title="jsDelivr 支持的资源源（加速类型）"></a>jsDelivr 支持的资源源（加速类型）</h2><ul><li><strong>NPM 源</strong>：加载 npm 上的模块资源。<br><a href="https://cdn.jsdelivr.net/npm/package@version/file">https://cdn.jsdelivr.net/npm/package@version/file</a></li><li><strong>cdnjs 源</strong>：提供经典 JS 库（如 jQuery、Lodash）。<br><a href="https://cdn.jsdelivr.net/cdnjs/library/version/file">https://cdn.jsdelivr.net/cdnjs/library/version/file</a></li><li><strong>WordPress 插件源</strong>：专为 WP 插件优化。<br><a href="https://cdn.jsdelivr.net/wp/plugin/version/file">https://cdn.jsdelivr.net/wp/plugin/version/file</a></li><li><strong>GitHub 源</strong>：从 GitHub 仓库加载资源。<br><a href="https://cdn.jsdelivr.net/gh/user/repo@version/file">https://cdn.jsdelivr.net/gh/user/repo@version/file</a></li></ul><hr><h2 id="jsDelivr-的优缺点"><a href="#jsDelivr-的优缺点" class="headerlink" title="jsDelivr 的优缺点"></a>jsDelivr 的优缺点</h2><p><strong>优点：</strong></p><ul><li><strong>成熟的全球网络：</strong>在海外拥有广泛的节点和出色的性能，是国际化项目的首选。</li><li><strong>生态丰富，支持广泛：</strong>支持 NPM、GitHub 等多种源，几乎无所不包。</li><li><strong>免费且社区驱动：</strong>为开源社区提供了巨大的便利，降低了开发门槛。</li><li><strong>强大的版本控制：</strong>允许你精确锁定资源版本，保证项目稳定性。</li></ul><p><strong>缺点：</strong></p><ul><li><strong>国内访问速度是其“阿喀琉斯之踵”：</strong>自备案被撤销后，国内访问质量时好时坏，尤其在网络高峰期或特定地区，延迟和丢包现象严重。</li><li><strong>存在被进一步限制的风险：</strong>由于其服务特性，未来仍可能面临国内网络环境的政策变动。</li></ul><hr><h2 id="括彩云加速-——-国内优化方案"><a href="#括彩云加速-——-国内优化方案" class="headerlink" title="括彩云加速 —— 国内优化方案"></a>括彩云加速 —— 国内优化方案</h2><h3 id="什么是“括彩云”？"><a href="#什么是“括彩云”？" class="headerlink" title="什么是“括彩云”？"></a>什么是“括彩云”？</h3><p>括彩云是一个<strong>面向国内的 jsDelivr 替代服务</strong>，由括彩云国内CDN提供支持，专注为中国用户提供更快、更稳定的静态资源加载体验。</p><p>地址如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cdn.iocdn.cc</span><br></pre></td></tr></table></figure><h3 id="优势："><a href="#优势：" class="headerlink" title="优势："></a>优势：</h3><ul><li><strong>国内优先策略：</strong>所有 CDN 节点均部署在中国大陆，由国内顶尖的云服务商提供支持，从根本上解决了跨境访问的延迟问题。</li><li><strong>无缝迁移体验：</strong>其 URL 结构刻意模仿 jsDelivr，用户几乎只需替换域名即可完成迁移，学习成本极低。</li><li><strong>高带宽与稳定性：</strong>作为公益项目，它依然提供了充足的带宽资源，确保了在常规使用下的流畅体验。</li></ul><h3 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a>注意事项：</h3><p>括彩云虽然稳定，但仍是<strong>公益服务</strong>，请不要滥用：</p><ul><li><strong>禁止加速图床、视频</strong>等大文件资源</li><li><strong>不建议加速字体文件</strong>，因其频繁变更且体积大</li></ul><hr><h2 id="如何测速括彩云的性能？"><a href="#如何测速括彩云的性能？" class="headerlink" title="如何测速括彩云的性能？"></a>如何测速括彩云的性能？</h2><p>你可以通过以下方式验证它的加速效果：</p><ul><li><p><strong>Chrome 浏览器 F12 → Network 选项卡</strong>：查看资源加载速度</p><ul><li>打开你的网站，按 F12 键打开开发者工具，切换到 Network (网络) 选项卡。</li><li>强制刷新页面 (Ctrl + F5 或 Cmd + R)。</li><li>在下方的资源列表中，找到以 cdn.iocdn.cc 开头的资源，查看其 Time (加载时间) 列。通常，你会看到几十毫秒甚至更快的响应速度。</li></ul></li><li><p><strong>使用在线测速网站</strong>（如 itdog.cn）</p><ul><li>输入一个括彩云的资源 URL，例如 <code>https://cdn.iocdn.cc/npm/jquery@3.6.0/dist/jquery.min.js</code>。</li><li>查看全国各地的测速节点的延迟和下载速度，结果一目了然。</li></ul><p><img src="https://pic1.imgdb.cn/item/684acf1a58cb8da5c848a4e0.png"></p></li></ul><p>测试结论：对于目标用户在大陆的网站，括彩云的速度和稳定性远超当前 jsDelivr 的表现；但如果你的网站主要服务海外用户，那么继续使用 jsDelivr 仍然是更合适的选择。<br>如果网站面向国内用户，非常推荐使用括彩云；若服务面向海外，建议继续使用 jsDelivr。</p><hr><h2 id="Hexo-博客中如何使用智云-CDN？"><a href="#Hexo-博客中如何使用智云-CDN？" class="headerlink" title="Hexo 博客中如何使用智云 CDN？"></a>Hexo 博客中如何使用智云 CDN？</h2><p>几乎所有现代 Hexo 主题都支持自定义 CDN。这里的关键是找到主题配置文件中关于 CDN 的设置项。</p><p>以 <code>hexo-theme-anzhiyu</code> 主题为例，配置步骤如下：</p><h3 id="找到主题配置文件"><a href="#找到主题配置文件" class="headerlink" title="找到主题配置文件"></a>找到主题配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_config.anzhiyu.yml</span><br></pre></td></tr></table></figure><h3 id="修改-CDN-设置"><a href="#修改-CDN-设置" class="headerlink" title="修改 CDN 设置"></a>修改 CDN 设置</h3><p>将 CDN 设置为 custom：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">CDN:</span></span><br><span class="line">  <span class="comment"># The CDN provider of internal scripts (主题内部 js 的 cdn 配置)</span></span><br><span class="line">  <span class="comment"># option: local/elemecdn/jsdelivr/unpkg/cdnjs/onmicrosoft/cbd/anheyu/custom</span></span><br><span class="line">  <span class="comment"># Dev version can only choose. ( dev版的主题只能设置为 local )</span></span><br><span class="line">  <span class="attr">internal_provider:</span> <span class="string">local</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># The CDN provider of third party scripts (第三方 js 的 cdn 配置)</span></span><br><span class="line">  <span class="comment"># option: elemecdn/jsdelivr/unpkg/cdnjs/onmicrosoft/cbd/anheyu/custom</span></span><br><span class="line">  <span class="attr">third_party_provider:</span> <span class="string">custom</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Add version number to CDN, true or false</span></span><br><span class="line">  <span class="attr">version:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Custom format</span></span><br><span class="line">  <span class="comment"># For example: https://cdn.staticfile.org/$&#123;cdnjs_name&#125;/$&#123;version&#125;/$&#123;min_cdnjs_file&#125;</span></span><br><span class="line">  <span class="attr">custom_format:</span> <span class="string">https://cdn.iocdn.cc/npm/$&#123;name&#125;@$&#123;version&#125;/$&#123;min_file&#125;</span></span><br></pre></td></tr></table></figure><p>启用自定义 CDN 选项 (provider: custom)。<br>提供括彩云的 URL 模板 (custom_format)，其中的 ${name}, ${version}, ${min_file} 是主题会自动替换的占位符。</p><h3 id="重新部署"><a href="#重新部署" class="headerlink" title="重新部署"></a>重新部署</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><h3 id="验证是否成功"><a href="#验证是否成功" class="headerlink" title="验证是否成功"></a>验证是否成功</h3><p>部署完成后，打开你的网站，通过浏览器 F12 的“源代码”或“网络”面板，检查页面引用的 JS&#x2F;CSS 资源路径是否已成功替换为 <code>cdn.iocdn.cc</code>。</p><p>如果你使用的是其他主题，也可以参考类似配置，自行修改。</p><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>jsDelivr 是一个国际知名的 CDN，但对国内用户来说，<strong>访问速度受限</strong>。而“括彩云”作为替代方案，提供了<strong>免费、高速、稳定</strong>的国内加速服务。</p><p>为了让大家都能长期享受该服务，我们要：</p><ul><li>不滥用</li><li>不消耗过多带宽</li><li>共同维护这个公益项目</li></ul><p>最后，向括彩云及其背后的贡献者们致以诚挚的感谢！</p><p><strong>括彩云官网：</strong> <a href="https://www.kuocaicdn.com/">https://www.kuocaicdn.com</a></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;什么是-jsDelivr？&quot;&gt;&lt;a href=&quot;#什么是-jsDelivr？&quot; class=&quot;headerlink&quot; title=&quot;什么是 jsDelivr？&quot;&gt;&lt;/a&gt;什么是 jsDelivr？&lt;/h2&gt;&lt;p&gt;jsDelivr</summary>
        
      
    
    
    
    <category term="开发笔记" scheme="http://example.com/categories/%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="网站加速" scheme="http://example.com/tags/%E7%BD%91%E7%AB%99%E5%8A%A0%E9%80%9F/"/>
    
    <category term="CDN" scheme="http://example.com/tags/CDN/"/>
    
    <category term="JSDelivr" scheme="http://example.com/tags/JSDelivr/"/>
    
    <category term="括彩云" scheme="http://example.com/tags/%E6%8B%AC%E5%BD%A9%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 博客集成 Twikoo 评论系统｜基于 Vercel 的免费部署实践</title>
    <link href="http://example.com/posts/eb1b023d.html"/>
    <id>http://example.com/posts/eb1b023d.html</id>
    <published>2025-02-15T06:16:22.000Z</published>
    <updated>2025-06-15T09:42:49.131Z</updated>
    
    <content type="html"><![CDATA[<p>Twikoo 是一款简洁、安全且免费的静态网站评论系统，通过将其与 Vercel 的免费部署服务相结合，可以为你的 Hexo 博客轻松添加一个功能丰富的互动评论区。本教程将详细介绍如何一步步完成部署和配置。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>在开始之前，请确保你已具备以下条件：</p><ul><li><strong>一个 Hexo 博客：</strong> 并已熟悉其基本操作。</li><li><strong>一个 GitHub 账户：</strong> 用于登录 Vercel 和 MongoDB。</li><li><strong>一个 Vercel 账户：</strong> 用于部署 Twikoo 后端服务。</li><li><strong>一个 MongoDB 账户：</strong> 用于存储评论数据。</li></ul><h2 id="部署流程"><a href="#部署流程" class="headerlink" title="部署流程"></a>部署流程</h2><h3 id="创建-MongoDB-数据库"><a href="#创建-MongoDB-数据库" class="headerlink" title="创建 MongoDB 数据库"></a>创建 MongoDB 数据库</h3><p>Twikoo 需要一个数据库来存储评论数据，MongoDB Atlas 提供了免费的共享数据库，非常适合个人博客使用。</p><ol><li><strong>注册并登录 MongoDB Atlas：</strong> 访问 MongoDB 官网并创建一个账户，你也可以选择使用 Google 账户直接登录。</li><li><strong>创建免费数据库：</strong> 登录后，选择创建一个免费的（Free）共享数据库（Shared Clusters）。在云服务商（Cloud Provider）中推荐选择 AWS，区域（Region）可选择 <code>Oregon (us-west-2)</code>。</li><li><strong>配置数据库用户：</strong> 在 “Database Access” 选项卡下，创建一个新的数据库用户，并记录下你设置的用户名和密码，稍后会用到。</li></ol><p><img src="https://twikoo.js.org/assets/mongodb-1.kzmwAvw2.png"></p><ol start="4"><li><strong>配置网络访问：</strong> 在 “Network Access” 选项卡下，添加一个新的 IP 地址。为了确保 Vercel 能够访问你的数据库，请选择 “Allow Access from Anywhere”（允许任何 IP 地址访问），系统会自动填入 <code>0.0.0.0/0</code>。</li></ol><p><img src="https://twikoo.js.org/assets/mongodb-2.wGC2d7_O.png"></p><ol start="5"><li><strong>获取数据库连接字符串：</strong> 返回 “Database” 页面，点击 “Connect”，选择 “Drivers”。系统会生成一个连接字符串，请将其复制下来，并将 <code>&lt;password&gt;</code> 部分替换为你刚刚创建的数据库密码。</li></ol><p><img src="https://twikoo.js.org/assets/mongodb-3.BlCbBw8p.png"></p><h3 id="使用-Vercel-一键部署-Twikoo"><a href="#使用-Vercel-一键部署-Twikoo" class="headerlink" title="使用 Vercel 一键部署 Twikoo"></a>使用 Vercel 一键部署 Twikoo</h3><p>Vercel 平台可以让你轻松地部署 Twikoo 的后端云函数。</p><ol><li><strong>一键部署：</strong> 点击 Twikoo 官方提供的<a href="https://vercel.com/import/project?template=https://github.com/twikoojs/twikoo/tree/main/src/server/vercel-min">一键部署</a>链接，它会自动引导你到 Vercel 平台并创建一个新的项目。</li><li><strong>配置环境变量：</strong> 在 Vercel 创建项目时，会要求你配置环境变量。 在这里，你需要添加一个名为 <code>MONGODB_URI</code> 的环境变量，其值就是你在第一步中获取并修改好的 MongoDB 连接字符串。</li><li><strong>完成部署：</strong> 点击部署后，Vercel 会自动拉取 Twikoo 的代码并完成部署。部署成功后，Vercel 会为你生成一个域名，例如 <code>your-project-name.vercel.app</code>。这个地址就是你的环境 ID (envId)，请务必记录下来。</li><li><strong>自定义域名：</strong> 因为众所周知的原因，<code>.vercel.app</code>这个后缀的域名在国内几乎无法访问，所以我们需要绑定一个属于自己的自定义域名，如果你还不会，可以参考我的这篇博文：<a href="/posts/7a6c86f1.html">Vercel 托管站点提速技巧｜使用优选域名绕过卡慢节点，全面提升国内访问速度</a></li></ol><h3 id="在-Hexo-主题中配置-Twikoo"><a href="#在-Hexo-主题中配置-Twikoo" class="headerlink" title="在 Hexo 主题中配置 Twikoo"></a>在 Hexo 主题中配置 Twikoo</h3><p>部署好后端服务后，你需要在你的 Hexo 博客中进行前端配置，以便加载评论框。</p><p>几乎所有现代 Hexo 主题都支持自定义评论系统。而这些评论系统中几乎都有Twikoo。这里的关键是找到主题配置文件中关于自定义评论系统的设置项。</p><p>官方文档中列出了常见的 Hexo 主题配置：<a href="https://twikoo.js.org/frontend.html#%E5%9C%A8-hexo-%E4%B8%AD%E4%BD%BF%E7%94%A8">在 Hexo 中使用</a></p><ol><li><strong>修改主题配置文件：</strong> 打开你 Hexo 博客项目中的主题配置文件（通常是 <code>_config.theme.yml</code> 文件）。</li><li><strong>找到评论配置项：</strong> 定位到主题中关于评论系统的配置部分，不同的主题可能会有差异。以 <code>hexo-theme-anzhiyu</code> 主题为例。你需要找到 <code>comments</code> 配置项。</li><li><strong>启用并配置 Twikoo：</strong><ul><li>将评论系统 <code>use</code> 设置为 <code>Twikoo</code>。<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">comments:</span></span><br><span class="line">  <span class="comment"># Up to two comments system, the first will be shown as default</span></span><br><span class="line">  <span class="comment"># Choose: Valine/Waline/Twikoo/Artalk</span></span><br><span class="line">  <span class="attr">use:</span> <span class="string">Twikoo</span> <span class="comment"># Twikoo/Waline</span></span><br><span class="line">  <span class="attr">text:</span> <span class="literal">true</span> <span class="comment"># Display the comment name next to the button</span></span><br><span class="line">  <span class="comment"># lazyload: The comment system will be load when comment element enters the browser&#x27;s viewport.</span></span><br><span class="line">  <span class="comment"># If you set it to true, the comment count will be invalid</span></span><br><span class="line">  <span class="attr">lazyload:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">count:</span> <span class="literal">false</span> <span class="comment"># Display comment count in post&#x27;s top_img</span></span><br><span class="line">  <span class="attr">card_post_count:</span> <span class="literal">false</span> <span class="comment"># Display comment count in Home Page</span></span><br></pre></td></tr></table></figure></li><li>填写 <code>envId</code>，其值就是你在 Vercel 部署成功后获得的地址 (例如：<code>https://xxx.vercel.app/</code>)，如果你自定义了域名那就是你的自定义域名(前面记着要填写<code>https://</code>)<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Twikoo</span></span><br><span class="line"><span class="comment"># https://github.com/imaegoo/twikoo</span></span><br><span class="line"><span class="attr">twikoo:</span></span><br><span class="line">  <span class="attr">envId:</span> <span class="string">https://xxx.vercel.app/</span></span><br><span class="line">  <span class="attr">region:</span></span><br><span class="line">  <span class="attr">visitor:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">option:</span></span><br></pre></td></tr></table></figure></li><li>根据你的主题文档，可能还会有其他可配置项，例如是否显示访客信息等，你可以按需进行配置。</li></ul></li></ol><h3 id="第四步：重新部署-Hexo-博客"><a href="#第四步：重新部署-Hexo-博客" class="headerlink" title="第四步：重新部署 Hexo 博客"></a>第四步：重新部署 Hexo 博客</h3><p>完成以上配置后，保存你的主题配置文件，然后执行 Hexo 的标准部署命令，将你的博客重新生成并部署到线上。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>部署完成后，打开你博客的任意一篇文章，如果配置正确，你应该就能在页面底部看到 Twikoo 评论框了。</p><h2 id="初始化管理面板"><a href="#初始化管理面板" class="headerlink" title="初始化管理面板"></a>初始化管理面板</h2><p>首次加载评论区时，点击评论框右下角的齿轮图标，可以设置一个管理密码。 之后你便可以通过这个密码登录管理面板，进行评论管理、邮件通知设置等高级配置。</p><p>至此，你已经成功地为你的 Hexo 博客集成了 Twikoo 评论系统，并利用 Vercel 实现了免费的后端部署。</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Twikoo 是一款简洁、安全且免费的静态网站评论系统，通过将其与 Vercel 的免费部署服务相结合，可以为你的 Hexo 博客轻松添加一个功能丰富的互动评论区。本教程将详细介绍如何一步步完成部署和配置。&lt;/p&gt;
&lt;h2 id=&quot;准备工作&quot;&gt;&lt;a</summary>
        
      
    
    
    
    <category term="开发笔记" scheme="http://example.com/categories/%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Vercel" scheme="http://example.com/tags/Vercel/"/>
    
    <category term="Hexo" scheme="http://example.com/tags/Hexo/"/>
    
    <category term="Twikoo" scheme="http://example.com/tags/Twikoo/"/>
    
    <category term="评论系统" scheme="http://example.com/tags/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>Vercel 托管站点提速技巧｜使用优选域名绕过卡慢节点，全面提升国内访问速度</title>
    <link href="http://example.com/posts/7a6c86f1.html"/>
    <id>http://example.com/posts/7a6c86f1.html</id>
    <published>2025-01-12T06:30:16.000Z</published>
    <updated>2025-06-15T06:15:23.170Z</updated>
    
    <content type="html"><![CDATA[<p>如果你的网站部署在 Vercel，但访问速度在国内表现不佳，那这篇文章将带你了解一个 <strong>简单高效、免费上手的 CDN 加速方法</strong>，让你的网站瞬间“飞”起来，速度媲美付费 CDN。</p><hr><h2 id="为-Vercel-项目绑定自定义域名"><a href="#为-Vercel-项目绑定自定义域名" class="headerlink" title="为 Vercel 项目绑定自定义域名"></a>为 Vercel 项目绑定自定义域名</h2><p>进入 Vercel 项目后台，点击顶部菜单的 <code>Settings</code>，在左侧选择 <code>Domains</code>，添加你的自定义域名。</p><p><img src="https://pic1.imgdb.cn/item/684b9bba58cb8da5c8497559.png"></p><p><img src="https://pic1.imgdb.cn/item/684b9c7c58cb8da5c849760d.png"></p><p><img src="https://pic1.imgdb.cn/item/684b9cf958cb8da5c8497640.png"></p><p>你设置的域名如果是 <code>vercel.blog.284628.xyz</code>，就需要添加这个完整子域名。不要直接复制别人的域名地址，每个项目需要绑定属于自己的子域名，且每个子域名的解析记录也不同。</p><p><img src="https://pic1.imgdb.cn/item/684bb09658cb8da5c8498272.png"></p><blockquote><p><strong>Vercel 官方建议解析方式如下：</strong></p></blockquote><table><thead><tr><th>类型</th><th>名称</th><th>值</th></tr></thead><tbody><tr><td>CNAME</td><td>你的子域名前缀</td><td><code>cname.vercel-dns.com</code></td></tr><tr><td>TXT</td><td>_vercel</td><td><code>&quot;vc-domain-verify=vercel.blog.284628.xyz,ba6b9d8703f814bd2e90,dc&quot;</code></td></tr></tbody></table><p>因为 Vercel 和 Cloudflare 已经完成了对接，所以 Cloudflare 相对来说比较简单，所以我换一个解析商来演示。</p><p><img src="https://pic1.imgdb.cn/item/684bb16758cb8da5c84982a6.png"></p><p><img src="https://pic1.imgdb.cn/item/684bb1e058cb8da5c84982fd.png"></p><p>如果你是 Cloudflare 直接点击<code>Configure Automatically</code>，并点击<code>授权</code>即可。</p><p><img src="https://pic1.imgdb.cn/item/684bb21958cb8da5c849833e.png"></p><p>添加完成后，稍等片刻，Vercel 会自动验证域名并完成绑定。</p><p><img src="https://pic1.imgdb.cn/item/684bb33e58cb8da5c8498421.png"></p><hr><h2 id="使用-CNAME-CDN-加速解析"><a href="#使用-CNAME-CDN-加速解析" class="headerlink" title="使用 CNAME CDN 加速解析"></a>使用 CNAME CDN 加速解析</h2><p>为了优化国内访问速度，我们可以借助特定的“中转节点”，把域名解析到一个加速层上。这里推荐使用 <code>vercel-cname.xingpingcn.top</code> 节点进行中转，实测在大多数地区都有稳定、快速的表现。</p><p><strong>GitHub:</strong> <a href="https://github.com/xingpingcn/enhanced-FaaS-in-China">enhanced-FaaS-in-China</a></p><h2 id="在你的-DNS-服务商处设置解析："><a href="#在你的-DNS-服务商处设置解析：" class="headerlink" title="在你的 DNS 服务商处设置解析："></a>在你的 DNS 服务商处设置解析：</h2><p>以 Cloudflare 为例：</p><table><thead><tr><th>类型</th><th>名称</th><th>值</th></tr></thead><tbody><tr><td>CNAME</td><td>你的子域名前缀</td><td><code>vercel-cname.xingpingcn.top</code></td></tr></tbody></table><p><img src="https://pic1.imgdb.cn/item/684bb62158cb8da5c8498632.png"></p><ul><li>若使用 Cloudflare，记得关闭“小黄云”代理。</li><li>等待几分钟后，解析即可生效。</li></ul><hr><h2 id="效果验证"><a href="#效果验证" class="headerlink" title="效果验证"></a>效果验证</h2><p>配置成功后，你的自定义域名将通过 <code>vercel-cname.xingpingcn.top</code> 作为中间节点接入 Vercel，CDN 加速路径优化，大陆用户访问速度将显著提升，尤其适合部署前端静态网站或博客项目。</p><p>你可以使用 <a href="https://www.itdog.cn/http/">ITDOG</a> 等工具测试访问延迟。</p><p><img src="https://pic1.imgdb.cn/item/684ac41c58cb8da5c8489564.png"></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;如果你的网站部署在 Vercel，但访问速度在国内表现不佳，那这篇文章将带你了解一个 &lt;strong&gt;简单高效、免费上手的 CDN 加速方法&lt;/strong&gt;，让你的网站瞬间“飞”起来，速度媲美付费 CDN。&lt;/p&gt;
&lt;hr&gt;
&lt;h2</summary>
        
      
    
    
    
    <category term="开发笔记" scheme="http://example.com/categories/%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="网站加速" scheme="http://example.com/tags/%E7%BD%91%E7%AB%99%E5%8A%A0%E9%80%9F/"/>
    
    <category term="Vercel" scheme="http://example.com/tags/Vercel/"/>
    
    <category term="优选域名" scheme="http://example.com/tags/%E4%BC%98%E9%80%89%E5%9F%9F%E5%90%8D/"/>
    
    <category term="CDN" scheme="http://example.com/tags/CDN/"/>
    
  </entry>
  
</feed>
